/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import * as React from 'react';
import * as ReactDOM from 'react-dom';
import { Debug } from 'boardgame.io/dist/react';
import * as uuid from 'uuid';
import { Component, Input } from '@angular/core';
/**
 * @record
 */
export function GameState() { }
function GameState_tsickle_Closure_declarations() {
    /** @type {?} */
    GameState.prototype.G;
    /** @type {?} */
    GameState.prototype.ctx;
    /** @type {?} */
    GameState.prototype.log;
    /** @type {?|undefined} */
    GameState.prototype.isActive;
    /** @type {?} */
    GameState.prototype._initial;
}
/**
 * @record
 */
export function DebugProps() { }
function DebugProps_tsickle_Closure_declarations() {
    /** @type {?} */
    DebugProps.prototype.gamestate;
    /** @type {?} */
    DebugProps.prototype.gameID;
    /** @type {?|undefined} */
    DebugProps.prototype.playerID;
    /** @type {?|undefined} */
    DebugProps.prototype.isConnected;
    /** @type {?|undefined} */
    DebugProps.prototype.isMultiplayer;
    /** @type {?|undefined} */
    DebugProps.prototype.moves;
    /** @type {?|undefined} */
    DebugProps.prototype.events;
    /** @type {?|undefined} */
    DebugProps.prototype.restore;
    /** @type {?|undefined} */
    DebugProps.prototype.showLog;
    /** @type {?|undefined} */
    DebugProps.prototype.store;
    /** @type {?|undefined} */
    DebugProps.prototype.step;
    /** @type {?|undefined} */
    DebugProps.prototype.reset;
    /** @type {?|undefined} */
    DebugProps.prototype.reducer;
    /** @type {?|undefined} */
    DebugProps.prototype.overrideGameState;
    /** @type {?|undefined} */
    DebugProps.prototype.visualizeAI;
}
var DebugComponent = /** @class */ (function () {
    function DebugComponent() {
    }
    /**
     * @return {?}
     */
    DebugComponent.prototype.getRootDomNode = /**
     * @return {?}
     */
    function () {
        return document.getElementById(this.rootDomID);
    };
    /**
     * @return {?}
     */
    DebugComponent.prototype.getProps = /**
     * @return {?}
     */
    function () {
        var _a = this, gamestate = _a.gamestate, gameID = _a.gameID, playerID = _a.playerID, isConnected = _a.isConnected, isMultiplayer = _a.isMultiplayer, moves = _a.moves, events = _a.events, restore = _a.restore, showLog = _a.showLog, store = _a.store, step = _a.step, reset = _a.reset, reducer = _a.reducer, overrideGameState = _a.overrideGameState, visualizeAI = _a.visualizeAI;
        return {
            gamestate: gamestate,
            gameID: gameID,
            playerID: playerID,
            isConnected: isConnected,
            isMultiplayer: isMultiplayer,
            moves: moves,
            events: events,
            restore: restore,
            showLog: showLog,
            store: store,
            step: step,
            reset: reset,
            reducer: reducer,
            overrideGameState: overrideGameState,
            visualizeAI: visualizeAI,
        };
    };
    /**
     * @return {?}
     */
    DebugComponent.prototype.isMounted = /**
     * @return {?}
     */
    function () {
        return !!this.rootDomID;
    };
    /**
     * @return {?}
     */
    DebugComponent.prototype.render = /**
     * @return {?}
     */
    function () {
        if (this.isMounted()) {
            ReactDOM.render(React.createElement(Debug, this.getProps()), this.getRootDomNode());
        }
    };
    /**
     * @return {?}
     */
    DebugComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.rootDomID = uuid.v1();
    };
    /**
     * @return {?}
     */
    DebugComponent.prototype.ngOnChanges = /**
     * @return {?}
     */
    function () {
        this.render();
    };
    /**
     * @return {?}
     */
    DebugComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        this.render();
    };
    /**
     * @return {?}
     */
    DebugComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        ReactDOM.unmountComponentAtNode(this.getRootDomNode());
    };
    DebugComponent.decorators = [
        { type: Component, args: [{
                    selector: 'bio-debug',
                    template: '<span [id]="rootDomID"></span>'
                },] },
    ];
    DebugComponent.propDecorators = {
        gamestate: [{ type: Input }],
        gameID: [{ type: Input }],
        playerID: [{ type: Input }],
        isConnected: [{ type: Input }],
        isMultiplayer: [{ type: Input }],
        moves: [{ type: Input }],
        events: [{ type: Input }],
        restore: [{ type: Input }],
        showLog: [{ type: Input }],
        store: [{ type: Input }],
        step: [{ type: Input }],
        reset: [{ type: Input }],
        reducer: [{ type: Input }],
        overrideGameState: [{ type: Input }],
        visualizeAI: [{ type: Input }]
    };
    return DebugComponent;
}());
export { DebugComponent };
function DebugComponent_tsickle_Closure_declarations() {
    /** @type {?} */
    DebugComponent.prototype.gamestate;
    /** @type {?} */
    DebugComponent.prototype.gameID;
    /** @type {?} */
    DebugComponent.prototype.playerID;
    /** @type {?} */
    DebugComponent.prototype.isConnected;
    /** @type {?} */
    DebugComponent.prototype.isMultiplayer;
    /** @type {?} */
    DebugComponent.prototype.moves;
    /** @type {?} */
    DebugComponent.prototype.events;
    /** @type {?} */
    DebugComponent.prototype.restore;
    /** @type {?} */
    DebugComponent.prototype.showLog;
    /** @type {?} */
    DebugComponent.prototype.store;
    /** @type {?} */
    DebugComponent.prototype.step;
    /** @type {?} */
    DebugComponent.prototype.reset;
    /** @type {?} */
    DebugComponent.prototype.reducer;
    /** @type {?} */
    DebugComponent.prototype.overrideGameState;
    /** @type {?} */
    DebugComponent.prototype.visualizeAI;
    /** @type {?} */
    DebugComponent.prototype.rootDomID;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmlvLWRlYnVnLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2JvYXJkZ2FtZS5pby1hbmd1bGFyLyIsInNvdXJjZXMiOlsibGliL2Jpby1kZWJ1Zy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sS0FBSyxLQUFLLE1BQU0sT0FBTyxDQUFDO0FBQy9CLE9BQU8sS0FBSyxRQUFRLE1BQU0sV0FBVyxDQUFDO0FBQ3RDLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUNoRCxPQUFPLEtBQUssSUFBSSxNQUFNLE1BQU0sQ0FBQztBQUU3QixPQUFPLEVBQWlCLFNBQVMsRUFBRSxLQUFLLEVBQWdDLE1BQU0sZUFBZSxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQW1EbEYsdUNBQWM7OztJQUF4QjtRQUNFLE1BQU0sQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztLQUNoRDs7OztJQUVTLGlDQUFROzs7SUFBbEI7UUFDRSxlQUNFLHdCQUFTLEVBQ1Qsa0JBQU0sRUFDTixzQkFBUSxFQUNSLDRCQUFXLEVBQ1gsZ0NBQWEsRUFDYixnQkFBSyxFQUNMLGtCQUFNLEVBQ04sb0JBQU8sRUFDUCxvQkFBTyxFQUNQLGdCQUFLLEVBQ0wsY0FBSSxFQUNKLGdCQUFLLEVBQ0wsb0JBQU8sRUFDUCx3Q0FBaUIsRUFDakIsNEJBQVcsQ0FDSjtRQUNULE1BQU0sQ0FBQztZQUNMLFNBQVMsV0FBQTtZQUNULE1BQU0sUUFBQTtZQUNOLFFBQVEsVUFBQTtZQUNSLFdBQVcsYUFBQTtZQUNYLGFBQWEsZUFBQTtZQUNiLEtBQUssT0FBQTtZQUNMLE1BQU0sUUFBQTtZQUNOLE9BQU8sU0FBQTtZQUNQLE9BQU8sU0FBQTtZQUNQLEtBQUssT0FBQTtZQUNMLElBQUksTUFBQTtZQUNKLEtBQUssT0FBQTtZQUNMLE9BQU8sU0FBQTtZQUNQLGlCQUFpQixtQkFBQTtZQUNqQixXQUFXLGFBQUE7U0FDWixDQUFDO0tBQ0g7Ozs7SUFFTyxrQ0FBUzs7OztRQUNmLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQzs7Ozs7SUFHaEIsK0JBQU07OztJQUFoQjtRQUNFLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQyxDQUFDLENBQUM7WUFDckIsUUFBUSxDQUFDLE1BQU0sQ0FDYixLQUFLLENBQUMsYUFBYSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUMsRUFDM0MsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUN0QixDQUFDO1NBQ0g7S0FDRjs7OztJQUVELGlDQUFROzs7SUFBUjtRQUNFLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLEVBQUUsRUFBRSxDQUFDO0tBQzVCOzs7O0lBRUQsb0NBQVc7OztJQUFYO1FBQ0UsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDO0tBQ2Y7Ozs7SUFFRCx3Q0FBZTs7O0lBQWY7UUFDRSxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7S0FDZjs7OztJQUVELG9DQUFXOzs7SUFBWDtRQUNFLFFBQVEsQ0FBQyxzQkFBc0IsQ0FBQyxJQUFJLENBQUMsY0FBYyxFQUFFLENBQUMsQ0FBQztLQUN4RDs7Z0JBM0ZGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsV0FBVztvQkFDckIsUUFBUSxFQUFFLGdDQUFnQztpQkFDM0M7Ozs0QkFFRSxLQUFLO3lCQUNMLEtBQUs7MkJBQ0wsS0FBSzs4QkFDTCxLQUFLO2dDQUNMLEtBQUs7d0JBQ0wsS0FBSzt5QkFDTCxLQUFLOzBCQUNMLEtBQUs7MEJBQ0wsS0FBSzt3QkFDTCxLQUFLO3VCQUNMLEtBQUs7d0JBQ0wsS0FBSzswQkFDTCxLQUFLO29DQUNMLEtBQUs7OEJBQ0wsS0FBSzs7eUJBcERSOztTQXFDYSxjQUFjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgKiBhcyBSZWFjdERPTSBmcm9tICdyZWFjdC1kb20nO1xyXG5pbXBvcnQgeyBEZWJ1ZyB9IGZyb20gJ2JvYXJkZ2FtZS5pby9kaXN0L3JlYWN0JztcclxuaW1wb3J0ICogYXMgdXVpZCBmcm9tICd1dWlkJztcclxuXHJcbmltcG9ydCB7IEFmdGVyVmlld0luaXQsIENvbXBvbmVudCwgSW5wdXQsIE9uQ2hhbmdlcywgT25EZXN0cm95LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgR2FtZVN0YXRlIHtcclxuICBHOiBhbnk7XHJcbiAgY3R4OiBhbnk7XHJcbiAgbG9nOiBhbnk7XHJcbiAgaXNBY3RpdmU/OiBib29sZWFuO1xyXG4gIF9pbml0aWFsOiBhbnk7XHJcbn1cclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgRGVidWdQcm9wcyB7XHJcbiAgZ2FtZXN0YXRlOiBHYW1lU3RhdGU7XHJcbiAgZ2FtZUlEOiBzdHJpbmc7XHJcbiAgcGxheWVySUQ/OiBzdHJpbmc7XHJcbiAgaXNDb25uZWN0ZWQ/OiBib29sZWFuO1xyXG4gIGlzTXVsdGlwbGF5ZXI/OiBib29sZWFuO1xyXG4gIG1vdmVzPzogYW55O1xyXG4gIGV2ZW50cz86IGFueTtcclxuICByZXN0b3JlPzogRnVuY3Rpb247XHJcbiAgc2hvd0xvZz86IGJvb2xlYW47XHJcbiAgc3RvcmU/OiBhbnk7XHJcbiAgc3RlcD86IEZ1bmN0aW9uO1xyXG4gIHJlc2V0PzogRnVuY3Rpb247XHJcbiAgcmVkdWNlcj86IEZ1bmN0aW9uO1xyXG4gIG92ZXJyaWRlR2FtZVN0YXRlPzogRnVuY3Rpb247XHJcbiAgdmlzdWFsaXplQUk/OiBGdW5jdGlvbjtcclxufVxyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdiaW8tZGVidWcnLFxyXG4gIHRlbXBsYXRlOiAnPHNwYW4gW2lkXT1cInJvb3REb21JRFwiPjwvc3Bhbj4nXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBEZWJ1Z0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95LCBPbkNoYW5nZXMsIEFmdGVyVmlld0luaXQge1xyXG4gIEBJbnB1dCgpIGdhbWVzdGF0ZTogR2FtZVN0YXRlO1xyXG4gIEBJbnB1dCgpIGdhbWVJRDogc3RyaW5nO1xyXG4gIEBJbnB1dCgpIHBsYXllcklEPzogc3RyaW5nO1xyXG4gIEBJbnB1dCgpIGlzQ29ubmVjdGVkPzogYm9vbGVhbjtcclxuICBASW5wdXQoKSBpc011bHRpcGxheWVyPzogYm9vbGVhbjtcclxuICBASW5wdXQoKSBtb3Zlcz86IGFueTtcclxuICBASW5wdXQoKSBldmVudHM/OiBhbnk7XHJcbiAgQElucHV0KCkgcmVzdG9yZT86IEZ1bmN0aW9uO1xyXG4gIEBJbnB1dCgpIHNob3dMb2c/OiBib29sZWFuO1xyXG4gIEBJbnB1dCgpIHN0b3JlPzogYW55O1xyXG4gIEBJbnB1dCgpIHN0ZXA/OiBGdW5jdGlvbjtcclxuICBASW5wdXQoKSByZXNldD86IEZ1bmN0aW9uO1xyXG4gIEBJbnB1dCgpIHJlZHVjZXI/OiBGdW5jdGlvbjtcclxuICBASW5wdXQoKSBvdmVycmlkZUdhbWVTdGF0ZT86IEZ1bmN0aW9uO1xyXG4gIEBJbnB1dCgpIHZpc3VhbGl6ZUFJPzogRnVuY3Rpb247XHJcblxyXG4gIHJvb3REb21JRDogc3RyaW5nO1xyXG5cclxuICBwcm90ZWN0ZWQgZ2V0Um9vdERvbU5vZGUoKSB7XHJcbiAgICByZXR1cm4gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGhpcy5yb290RG9tSUQpO1xyXG4gIH1cclxuXHJcbiAgcHJvdGVjdGVkIGdldFByb3BzKCk6IERlYnVnUHJvcHMge1xyXG4gICAgY29uc3Qge1xyXG4gICAgICBnYW1lc3RhdGUsXHJcbiAgICAgIGdhbWVJRCxcclxuICAgICAgcGxheWVySUQsXHJcbiAgICAgIGlzQ29ubmVjdGVkLFxyXG4gICAgICBpc011bHRpcGxheWVyLFxyXG4gICAgICBtb3ZlcyxcclxuICAgICAgZXZlbnRzLFxyXG4gICAgICByZXN0b3JlLFxyXG4gICAgICBzaG93TG9nLFxyXG4gICAgICBzdG9yZSxcclxuICAgICAgc3RlcCxcclxuICAgICAgcmVzZXQsXHJcbiAgICAgIHJlZHVjZXIsXHJcbiAgICAgIG92ZXJyaWRlR2FtZVN0YXRlLFxyXG4gICAgICB2aXN1YWxpemVBSSxcclxuICAgIH0gPSB0aGlzO1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgZ2FtZXN0YXRlLFxyXG4gICAgICBnYW1lSUQsXHJcbiAgICAgIHBsYXllcklELFxyXG4gICAgICBpc0Nvbm5lY3RlZCxcclxuICAgICAgaXNNdWx0aXBsYXllcixcclxuICAgICAgbW92ZXMsXHJcbiAgICAgIGV2ZW50cyxcclxuICAgICAgcmVzdG9yZSxcclxuICAgICAgc2hvd0xvZyxcclxuICAgICAgc3RvcmUsXHJcbiAgICAgIHN0ZXAsXHJcbiAgICAgIHJlc2V0LFxyXG4gICAgICByZWR1Y2VyLFxyXG4gICAgICBvdmVycmlkZUdhbWVTdGF0ZSxcclxuICAgICAgdmlzdWFsaXplQUksXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBpc01vdW50ZWQoKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gISF0aGlzLnJvb3REb21JRDtcclxuICB9XHJcblxyXG4gIHByb3RlY3RlZCByZW5kZXIoKSB7XHJcbiAgICBpZiAodGhpcy5pc01vdW50ZWQoKSkge1xyXG4gICAgICBSZWFjdERPTS5yZW5kZXIoXHJcbiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChEZWJ1ZywgdGhpcy5nZXRQcm9wcygpKSxcclxuICAgICAgICB0aGlzLmdldFJvb3REb21Ob2RlKClcclxuICAgICAgKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gICAgdGhpcy5yb290RG9tSUQgPSB1dWlkLnYxKCk7XHJcbiAgfVxyXG5cclxuICBuZ09uQ2hhbmdlcygpIHtcclxuICAgIHRoaXMucmVuZGVyKCk7XHJcbiAgfVxyXG5cclxuICBuZ0FmdGVyVmlld0luaXQoKSB7XHJcbiAgICB0aGlzLnJlbmRlcigpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkRlc3Ryb3koKSB7XHJcbiAgICBSZWFjdERPTS51bm1vdW50Q29tcG9uZW50QXROb2RlKHRoaXMuZ2V0Um9vdERvbU5vZGUoKSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==